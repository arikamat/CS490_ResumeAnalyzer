import pytest
from pathlib import Path
import io
import sys
from backend.schemas.categorical_keyword import CategoricalKeyword
from backend.utils.resume_feedback import generate_feedback

categories = ["skills", "experience", "education"]


def test_generate_feedback_good_bad_resumes():
    """
    Test the `generate_feedback` function using a good and a bad resume.

    - Verifies that no suggestions are generated by the good resume.
    - Verifies that suggestions are generated for the bad resume.
    - Verifies that the good resume has less suggestions than the bad resume

    This test ensures that the function correctly identifies and handles both well-matched resumes and those lacking necessary qualifications.
    """
    missing_keywords_good = {"skills": [], "experience": [], "education": []}

    missing_keywords_bad = {
        "skills": ["HTML", "CSS"],
        "experience": ["frontend"],
        "education": ["bachelor's"],
    }

    feedback_good = generate_feedback(CategoricalKeyword(**missing_keywords_good))
    feedback_bad = generate_feedback(CategoricalKeyword(**missing_keywords_bad))

    # Verify that keywords missing from bad resume are correctly extracted
    assert any(feedback_bad["suggestions"][category] for category in categories)

    # Verify that nothing is missing from the good resume
    assert all(not feedback_good["suggestions"][category] for category in categories)

    # Verify that the bad resume has more suggestions than the good resume
    assert sum(
        len(feedback_bad["suggestions"][category]) for category in categories
    ) >= sum(len(feedback_good["suggestions"][category]) for category in categories)
